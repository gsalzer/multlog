
logic "Shramko-Wansing".

truth_values { e , n , f , t , b , nf , nt , ft , nb , fb , tb , nft , nfb , ntb , ftb , a }.

designated_truth_values { t, nt, tb, ntb }.

operator(neg/1, mapping {
	 (e  ) : e  ,
	 (n  ) : t  ,
	 (f  ) : b  ,
	 (t  ) : n  ,
	 (b  ) : f  ,
	 (nf ) : tb ,
	 (nt ) : nt ,
	 (nb ) : ft ,
	 (ft ) : nb ,
	 (fb ) : fb ,
	 (tb ) : nf ,
	 (nft) : ntb,
	 (nfb) : ftb,
	 (ntb) : nft,
	 (ftb) : ntb,
	 (a  ) : a  
	}
).

/*
%% Truth ordering: explicit ordering; all pairs
ordering(truth,"{nf < f, nf < n, nf < nfb, nf < nft, f < fb, f < ft, f < e, n < e, n < nb, n < nt, e < b, e < t, nfb < fb, nfb < a, nfb < nb, nft < ft, nft < a, nft < nt, fb < ftb, fb < b, ft < ftb, ft < t, nb < b, nb < ntb, nt < t, nt < ntb, b < tb, t < tb, a < ftb, a < ntb, ftb < tb, ntb < tb }"). 
*/

%% Truth ordering: more compact

ordering(truth, "nf < { f < { fb < {ftb < tb, b < tb}, ft < {ftb, t < tb}, e  < {b,t}}, nfb < { fb, a  < {ftb, ntb}, nb < {b, ntb}}, nft < { ft, a, nt < {t, ntb < tb}}, n < {e, nb, nt}}").

operator(and  /2, inf(truth)).
operator(or   /2, sup(truth)).

%% quantifier(forall, induced_by inf(truth)).
%% quantifier(exists, induced_by sup(truth)).
