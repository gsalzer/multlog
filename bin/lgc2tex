#!/bin/bash

PROLOG='@prolog@'
MLPATH='@mlpath@'
BIBTEX='@bibtex@'
LATEX='@latex@'
PDFLATEX='@pdflatex@'
DVIPS='@dvips@'
PS2PDF='@ps2pdf@'
LTX='@ltx@'
LTXPDF='@ltxpdf@'
PSPDF='@pspdf@'
BASENAME='@basename@'
CP='@cp@'
RM='@rm@'
CAT='@cat@'

prg=`$BASENAME $0`
case "$prg" in
   lgc2pdf)
      if "$LTXPDF"; then
         :
      elif "$PSPDF"; then
         :
      else
         echo "$prg: MUltlog was not installed with PDF support"
         exit 1
      fi
	  ;&
   lgc2dvi)
      if "$LTX"; then
         :
      else
         echo "$prg: MUltlog was not installed with TeX support"
         exit 1
      fi
	  ;;
   lgc2tex)
      ;;
   *)
      echo "$prg: script called with strange name, not sure what to do"
      exit 1
esac

if [ ! "$1" ]; then
   echo "$prg: Argument (file with specification of logic) missing"
   exit 1
fi

file="${1%.lgc}"
shift

if [ "$*" ]; then
   echo "$prg: too many arguments ($*)"
   exit
fi

if [ ! -f "$file.lgc" ]; then
   echo "$prg: Specification $file.lgc does not exist."
   exit 1
fi

logfile="$file.mlg"
"$RM" -f "$logfile"

for ext in tex sty aux log bbl out blg dvi mlg lgc.stripped cfg.stripped; do
   "$RM" -f "$file.$ext"
done

if [ ! -f "$file.cfg" ]; then
   "$CP" "$MLPATH/ml.cfg" "$file.cfg"
fi

$PROLOG -s "$MLPATH/ml" -g "lgc2tex('$file.lgc','$file.sty','$file.cfg'), halt." 2>>"$logfile"

if [ -f "$file.sty" ]; then
   "$CP" "$MLPATH/ml.tex" "$file.tex"
   "$CP" "$MLPATH/ml.bib" .
   "$CP" "$MLPATH/proof.sty" .
   echo ""
   case "$prg" in
      lgc2pdf)
         if "$LTXPDF"; then
            echo "PDFLaTeXing $file ..."
            "$PDFLATEX"  "$file" >> "$logfile" </dev/null
            echo "BiBTeXing $file ..."
            "$BIBTEX" "$file" >> "$logfile" </dev/null
            echo "PDFLaTeXing $file ..."
            "$PDFLATEX"  "$file" >> "$logfile" </dev/null
            echo "PDFLaTeXing $file ..."
            "$PDFLATEX"  "$file" >> "$logfile" </dev/null
         else
            echo "LaTeXing $file ..."
            "$LATEX"  "$file" >> "$logfile" </dev/null
            echo "BiBTeXing $file ..."
            "$BIBTEX" "$file" >> "$logfile" </dev/null
            echo "LaTeXing $file ..."
            "$LATEX"  "$file" >> "$logfile" </dev/null
            echo "LaTeXing $file ..."
            "$LATEX"  "$file" >> "$logfile" </dev/null
            echo "Converting to Postscript ..."
            "$DVIPS" -Ppdf -o "$file.ps" "$file.dvi"
            echo "Converting to PDF ..."
            "$PS2PDF" "$file.ps" "$file.pdf"
         fi
         if [ -f "$file.pdf" ]; then
            echo "Cleaning up ..."
            for f in "$logfile" "$file.aux" "$file.log" "$file.bbl" "$file.blg" "$file.dvi" "$file.ps" "$file.sty" "$file.tex" "ml.sty" "ml.bib" "proof.sty" "$file.lgc.stripped" "$file.cfg.stripped"; do
               $RM -f "$f"
            done
            echo ""
            echo "Your paper '$file.pdf' is now ready for viewing."
         else
            echo "$prg: Some error happened. See $logfile for more information."
            exit 1
         fi
         ;;
      lgc2dvi)
         echo "LaTeXing $file ..."
         "$LATEX"  "$file" >> "$logfile" </dev/null
         echo "BiBTeXing $file ..."
         "$BIBTEX" "$file" >> "$logfile" </dev/null
         echo "LaTeXing $file ..."
         "$LATEX"  "$file" >> "$logfile" </dev/null
         echo "LaTeXing $file ..."
         "$LATEX"  "$file" >> "$logfile" </dev/null
         if [ -f "$file.dvi" ]; then
            echo "Cleaning up ..."
            for f in "$logfile" "$file.aux" "$file.log" "$file.bbl" "$file.blg" "$file.sty" "$file.tex" "ml.sty" "ml.bib" "proof.sty" "$file.lgc.stripped" "$file.cfg.stripped"; do
               $RM -f "$f"
            done
            echo ""
            echo "Your paper '$file.dvi' is now ready for viewing."
         else
            echo "$prg: Some error happened. See $logfile for more information."
            exit 1
         fi
         ;; 
      lgc2tex)
         "$CAT" <<catEND
Your paper '$file.tex' is now ready for TeXing.
Use the commands:
   pdflatex "$file"
   bibtex "$file"
   pdflatex "$file"
   pdflatex "$file"
catEND
         ;;
   esac
else
  echo "$prg: Some error happened. See $logfile for more information."
  exit 1
fi
